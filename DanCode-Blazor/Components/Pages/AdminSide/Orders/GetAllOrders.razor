@page "/AdminSide/GetAllOrders"
@using DanCode_Blazor.Components.Layout
@using DanCode_Blazor.Components.Pages.Utilites
@using DanCode_Blazor.Services.Base.interfaces;
@using Microsoft.AspNetCore.Http.Extensions
@layout AdminPanelLayout;

<style>
    .divbackground {
        background-color: #0b6131 !important;
        color: white;
    }

    .formbackground {
        background-color: #F7F9F2 !important;
    }

    .but {
        background-color: #0b6131 !important;
    }

    .table thead th {
        background-color: #0b6131;
        color: white;
        text-align: center;
    }

    .table tbody td, .table tbody th {
        text-align: center;
        vertical-align: middle;
    }

    .table tbody tr:hover {
        background-color: #f2f2f2;
    }

    .btn-custom {
        margin: 0 2px;
    }

    .card {
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #0b6131 !important;
        border: none;
    }

    .btn-danger {
        background-color: #ff4d4d !important;
        border: none;
    }

        .btn-primary:hover, .btn-danger:hover {
            opacity: 0.9;
        }

    /* Modal specific styling */
    .modal-content {
        border-radius: 10px;
    }

    .modal-header {
        background-color: #0b6131;
        color: white;
        border-bottom: none;
    }
</style>

<div class="container mt-4">
    <div>
        <h2 class="text-center m-2  p-3 divbackground rounded">Orders</h2>
        <hr />
    </div>

    @if (OrderDTOs == null)
    {
        <LoadingSpinner />
    }
    else
    {
        <div class="card p-4 mb-4">
            <div class="table-responsive border p-2 m-2 rounded">
                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Id</th>
                            <th scope="col">Date</th>
                            <th scope="col">Sum</th>
                            <th scope="col">UserId</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in OrderDTOs)
                        {
                            <tr>
                                <th scope="row">@item.Id</th>
                                <td>@item.CreateTime</td>
                                <td>@item.Sum</td>
                                <td>@item.UserId</td>
                                <td>
                                    <Button Class="btn btn-primary btn-sm btn-custom" @onclick="() => ShowOrderDetails(item.Id)">
                                        <i class="bi bi-pencil-square"></i> Show Details
                                    </Button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Modal -->
    @if (showModal)
    {
        <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Order Details </h5>
                      
                    </div>
                    <div class="modal-body">
                        @if (orderDetails == null)
                        {
                            <LoadingSpinner />
                        }
                        else
                        {
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Title</th>
                                        <th>Item Type</th>
                                        <th>Price</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var detail in orderDetails)
                                    {
                                        <tr>
                                            <td>@detail.Id</td>
                                            <td>@detail.Title</td>
                                            <td>@detail.ItemType</td>
                                   
                                            <td>@detail.Price</td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }


</div>

@code {

    [Inject] IOrderService OrderService { get; set; }
    [Inject] NavigationManager Navmanger { get; set; }

    ICollection<OrderDTO> OrderDTOs { get; set; }
    ICollection<OrderDetailDTO> orderDetails { get; set; }

    private bool showModal = false;
    private int currentOrderId;

    protected override async Task OnInitializedAsync()
    {
        var response = await OrderService.GetAllFinalizedOrders();
        OrderDTOs = response.Data;
    }

    private async Task ShowOrderDetails(int orderId)
    {
        showModal = true;
        currentOrderId = orderId;

        // Get the details of the order using the order ID
        var response = await OrderService.GetOrderDetailsByOrderId(orderId);
        orderDetails = response.Data;
    }

    private void CloseModal()
    {
        showModal = false;
        orderDetails = null;
    }
}
