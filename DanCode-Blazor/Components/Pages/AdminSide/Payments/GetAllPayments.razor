@page "/AdminSide/GetAllPayments"

@using DanCode_Blazor.Components.Layout
@using DanCode_Blazor.Components.Pages.Utilites
@using DanCode_Blazor.Services.Base.interfaces;
@using Microsoft.AspNetCore.Http.Extensions
@layout AdminPanelLayout;

<style>
    .divbackground {
        background-color: #0b6131 !important;
        color: white;
    }

    .formbackground {
        background-color: #F7F9F2 !important;
    }

    .but {
        background-color: #0b6131 !important;
    }

    .table thead th {
        background-color: #0b6131;
        color: white;
        text-align: center;
    }

    .table tbody td, .table tbody th {
        text-align: center;
        vertical-align: middle;
    }

    .table tbody tr:hover {
        background-color: #f2f2f2;
    }

    .btn-custom {
        margin: 0 2px;
    }

    .card {
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #0b6131 !important;
        border: none;
    }

    .btn-danger {
        background-color: #ff4d4d !important;
        border: none;
    }

        .btn-primary:hover, .btn-danger:hover {
            opacity: 0.9;
        }

    /* Modal specific styling */
    .modal-content {
        border-radius: 10px;
    }

    .modal-header {
        background-color: #0b6131;
        color: white;
        border-bottom: none;
    }
</style>


@if (IsWait)
{
   <LoadingSpinner></LoadingSpinner>
}
else
{

    <div class="container mt-4">

        <div>
            <h2 class="text-center m-2  p-3 divbackground rounded">Payments</h2>
            <hr />
        </div>



        <div class="card p-4 mb-4">
            <div class="table-responsive border p-2 m-2 rounded">
                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>

                            <th scope="col">Date</th>
                            <th scope="col">OrderId</th>
                            <th scope="col">UserId</th>
                            <th scope="col">Amount</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in PaymentsDTOs)
                        {
                            <tr>

                                <td>@item.Date</td>
                                <td>@item.OrderId</td>
                                <td>@item.UserId</td>
                                <td>@item.Amount</td>



                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>




    </div>
}


@code {

    [Inject] IPaymentService PaymentService { get; set; }
    [Inject] NavigationManager Navmanger { get; set; }

    ICollection<PaymentDTO> PaymentsDTOs { get; set; }
    ICollection<OrderDetailDTO> orderDetails { get; set; }

    private bool IsWait = false;

    protected override async Task OnInitializedAsync()
    {
        IsWait = true;
        try
        {
            var response = await PaymentService.GetAllPayments();
            PaymentsDTOs = response.Data;
        }
        catch
        {


        }
        finally
        {
            IsWait = false;
        }

    }


}
