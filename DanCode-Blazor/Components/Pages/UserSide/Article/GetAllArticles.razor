
@page "/Articles"
@using DanCode_Blazor.Components.Pages.Utilites
@using DanCode_Blazor.Services.Base.interfaces
@rendermode InteractiveServer


<PageTitle>  مقالات | آکادمی فوتبال ایران</PageTitle>
<title> مقالات | آکادمی فوتبال ایران</title>


<style>
    .divbackground {
        background-color: #0b6131 !important;
        color: white;
        padding: 20px;
        margin-bottom: 20px;
        text-align: center;
    }

    .course-card {
        border: 1px solid #ddd;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        background: white;
        margin-bottom: 20px;
        transition: transform 0.3s ease;
        padding: 20px;
        display: flex;
        flex-direction: row-reverse; /* جهت عکس و متن */
        cursor: pointer;
    }

        .course-card:hover {
            transform: scale(1.02);
        }

</style>

<div class="divbackground mt-3">
    <h2>مقالات </h2>
</div>

<hr />

@if (IsWait)
{
    <div class="text-center justify-content-center" role="status">
        <LoadingSpinner></LoadingSpinner>
    </div>
}

else
{
    <div class="container">
        <!-- استفاده از container-fluid برای ریسپانسیو بهتر -->

        <div class="row no-gutters">
            <!-- استفاده از no-gutters برای حذف فاصله‌های اضافی -->
            @if (Articles == null || Articles.Count == 0)
            {

                <div class="text-center">

                    هیچ مقاله ای برای نمایش وجود ندارد

                </div>
            }
            else
            {
                @foreach (var item in Articles)
                {
                    <div class="col-12 course-card card mb-3" @onclick="(()=> GotoArticleById(item.Id))">

                        <div class="row no-gutters">
                            <!-- حذف فاصله‌های اضافی بین ستون‌ها -->

                            <div class="col-md-4">
                                <img src="/Images/Articles/@item.ImageURL" class="img-fluid rounded-start" alt="Image">
                            </div>

                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@item.Title</h5>
                                </div>
                            </div>

                        </div>

                    </div>

                }

            }
        </div>

    </div>
    <hr />
}

@code {

    [Inject] IArticleService articleService { get; set; }
    [Inject] NavigationManager Navmanger { get; set; }

    ICollection<ArticleReadonlyDTO> Articles { get; set; }

    private string? Message;
    private bool IsWait = false;

    protected override async Task OnInitializedAsync()
    {

        IsWait = true;
        try
        {

            var response = await articleService.GetAllArticles();


            if (response.Success)
                Articles = response.Data;

            else
                Message = response.Message;



        }
        catch
        {

            Message = "Error";
        }
        finally
        {

            IsWait = false;
        };


    }

    private async Task GotoArticleById(int Id)
    {
        Navmanger.NavigateTo($"/Article/{Id}");
    }

}
